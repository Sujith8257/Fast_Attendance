rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Students collection rules
    match /students/{studentId} {
      // Allow students to read and write their own data
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.profile.firebaseUid;
      
      // Allow faculty to read student data
      allow read: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role == 'faculty';
      
      // Allow admin to read/write all student data
      allow read, write: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Login attempts collection rules
    match /loginAttempts/{attemptId} {
      // Allow students to read their own login attempts
      allow read: if request.auth != null 
        && resource.data.studentId == request.auth.uid;
      
      // Allow faculty to read all login attempts
      allow read: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role in ['faculty', 'admin'];
      
      // Allow system to write login attempts
      allow write: if request.auth != null;
    }
    
    // Attendance collection rules
    match /attendance/{attendanceId} {
      // Allow students to read their own attendance
      allow read: if request.auth != null 
        && resource.data.studentId == request.auth.uid;
      
      // Allow faculty to read/write attendance for their classes
      allow read, write: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role in ['faculty', 'admin'];
    }
    
    // Classes collection rules
    match /classes/{classId} {
      // Allow faculty to read/write their own classes
      allow read, write: if request.auth != null 
        && resource.data.facultyId == request.auth.uid;
      
      // Allow students to read class information
      allow read: if request.auth != null;
      
      // Allow admin to read/write all classes
      allow read, write: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Faculty collection rules
    match /faculty/{facultyId} {
      // Allow faculty to read/write their own data
      allow read, write: if request.auth != null 
        && request.auth.uid == facultyId;
      
      // Allow admin to read/write all faculty data
      allow read, write: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Face data subcollection rules
    match /students/{studentId}/faceData/{faceDataId} {
      // Allow students to read/write their own face data
      allow read, write: if request.auth != null 
        && request.auth.uid == get(/databases/$(database)/documents/students/$(studentId)).data.profile.firebaseUid;
      
      // Allow faculty to read face data for attendance
      allow read: if request.auth != null 
        && get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.role in ['faculty', 'admin'];
    }
    
    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
